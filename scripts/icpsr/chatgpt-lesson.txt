The script you provided seems to be converting categorical responses into binary indicators based on specific conditions and storing them in a data frame. Here are a few suggestions to make the script more efficient:

1. Use a function and a loop:
You can reduce code redundancy by creating a function to perform the recoding and then using a loop to iterate through the variables. This can simplify your code significantly.

```R
# Function for recoding
recoded_var <- function(data, var_name, conditions) {
  recode(data[[var_name]], conditions)
}

# List of variables and corresponding conditions
variables <- c("C811L1A", "C811L1B", "C811L2A", "C811L2B")
conditions <- list(
  "(11) Scold,nag,criticize" = 1,
  "(14) Threaten physical" = 1,
  "(15) Wash mouth" = 1,
  "(16) Hit with object" = 1,
  "(17) Slap" = 1,
  "(18) Spank" = 1
)

# Create a data frame with recoded variables
for (i in 1:length(variables)) {
  var_name <- variables[i]
  df[paste0("g1w1c2bhdi", (i - 1) * 6 + 1):(i * 6)] <- recoded_var(data, var_name, conditions)
}
```

2. Avoid creating an empty data frame with predefined column names:
Instead of creating an empty data frame with predefined column names, you can create a data frame with the appropriate number of rows and add the recoded variables as you loop through them.

3. Ensure that you are not missing any variables:
Make sure that all the variables you want to recode are included in the `variables` vector, and that you have defined the corresponding conditions correctly.

By implementing these changes, you can make your script more efficient and maintainable.